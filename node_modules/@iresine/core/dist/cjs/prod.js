"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("@iresine/object-path"),t=require("@iresine/helpers");function s(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var r=s(e);class o{constructor(e){this.parents=new Set,this.refs=new Map,this.prepared=null,this.listeners=new Set,this.storeId=e}get children(){return new Set(this.refs.values())}}class n{constructor({getId:e,hooks:t}={}){this._hooks={},this.models=new Map,this.updated=new Set,t&&(t.join&&(this._hooks.join=t.join),t.parse&&(this._hooks.parse=t.parse)),e&&(this._getId=e)}_getId(e){return e&&e.id&&e.type?`${e.type}:${e.id}`:null}_isTemplate(e){return null!==this._getId(e)}_getStructureType(e){return Array.isArray(e)?"array":this._isTemplate(e)?"template":t.isObject(e)?"object":"unknown"}parse(e){if("unknown"===this._getStructureType(e))return null;const t=this._parse(e),s=this._reconciliation(this.updated.values());return this._notify(new Set([...this.updated,...s])),this.updated.clear(),t}get(e){const t=this.models.get(e);return t.prepared||this.join(e),t.prepared}join(e){const t=this.models.get(e),s=r.default.joinTemplate(t.template);t.prepared=s;for(let[e,o]of t.refs){const t=this.get(this.models.get(o).storeId);r.default.set(s,e,t)}return this._hooks.join&&this._hooks.join(s),s}subscribe(e,t){for(const s of e)this.models.get(s).listeners.add(t)}unsubscribe(e,t){for(const s of e)this.models.get(s).listeners.delete(t)}joinRefs(e,t){if(1===t.size&&0===[...t.keys()][0].length)return this.get([...t.values()][0]);const s=r.default.joinTemplate(e);for(const[e,o]of t.entries())r.default.set(s,e,this.get(o));return s}_notify(e){const t=new Set;for(const s of e){const e=this.models.get(s);for(const s of e.listeners)t.add(s)}for(const s of t)s([...e])}_reconciliation(e){const t=new Set;for(const s of e){const e=this.models.get(s);for(const s of e.parents)t.add(s)}for(const e of t){if(this.updated.has(e))continue;const s=this.models.get(e);for(const e of s.parents.values())t.add(e);s.prepared=null}for(const e of t)this.updated.has(e)||this.join(e);return t}_insert(e,s,r){if(this.updated.has(e))return;let n=this.models.get(e),i=null;n?i=n.children:(this.models.set(e,new o(e)),n=this.models.get(e)),this.updated.add(e),n.prepared=s;const{refs:a,template:l}=this._parse(s,{parentModel:n,omitNextTemplate:!0});if(n.refs=a,n.template=l,i){const e=t.setUniq(i,n.children);for(const t of e)this.models.get(t).parents.delete(n.storeId)}r&&t.setAdd(n.parents,r)}_parse(e,{parentModel:s,omitNextTemplate:r=!1}={}){const o=[[[],e]],n=[[[],Array.isArray(e)?[]:{}]],i=new Map;for(let e=0;e<o.length;e++){1===e&&(r=!1);const a=o[e],l=a[0],h=a[1],d=this._getStructureType(h);if("unknown"!==d)if("template"!==d||!1!==r)if("object"!==d&&"template"!==d)if("array"!==d);else{0===h.length&&n.push([l,[]]);for(let e=0;e<h.length;e++){let t=e.toString();Array.isArray(h[e])&&(t=`[]${t}`),o.push([[...l,t],h[t]])}}else{for(let e in h){let t=e;Array.isArray(h[e])&&(t=`[]${e}`),o.push([[...l,t],h[e]])}t.isEmptyObject(h)&&n.push([l,{}])}else{this._hooks.parse&&this._hooks.parse(h);const e=this._getId(h);i.set(l,e),s?this._insert(e,h,[s.storeId]):this._insert(e,h,[])}else n.push([l,h])}return{refs:i,template:n}}}exports.Iresine=n,exports.default=n;
